name: 'Test and release Terraform artifacts'
run-name: '${{ github.event_name }} by ${{ github.actor }} #${{ github.run_number }}.${{ github.run_attempt }}'

on:
  push:
    branches:
      - 'main'

env:
  RELEASE_MAJOR_VERSION: '1'
  RELEASE_MID_VERSION: '${{ github.run_number }}'
  RELEASE_MINOR_VERSION: '${{ github.run_attempt }}'

jobs:
  download-terraform:
    runs-on:
      - 'ubuntu-latest'
    env:
      TERRAFORM_SETUP_LOG_PATH: '/home/runner/terraform-setup.log'

    steps:
      - name: 'Checkout repository'
        uses: 'actions/checkout@v2'

      - name: 'Terraform setup'
        run: |
          sudo chmod +x ./terraform-setup.sh
          sudo ./terraform-setup.sh $TERRAFORM_SETUP_LOG_PATH
        continue-on-error: true

      - name: 'Upload log file on failure'
        if: failure()
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'terraform-install-log'
          path: '$TERRAFORM_SETUP_LOG_PATH'

  create-release:
    runs-on:
      - 'ubuntu-latest'
    needs:
      - 'download-terraform'

    permissions:
      contents: 'write'
      packages: 'write'
      issues: 'write'
      deployments: 'write'

    steps:
      - name: 'Checkout repository'
        uses: 'actions/checkout@v2'
      
      - name: 'Create Release'
        id: 'create_release'
        uses: 'actions/create-release@v1'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
        with:
          tag_name: 'v${{ env.RELEASE_MAJOR_VERSION }}.${{ env.RELEASE_MID_VERSION }}.${{ env.RELEASE_MINOR_VERSION }}'
          release_name: 'Release v${{ env.RELEASE_MAJOR_VERSION }}.${{ env.RELEASE_MID_VERSION }}.${{ env.RELEASE_MINOR_VERSION }}'
          draft: false
          prerelease: false
          body: |
            Release notes for terraform-setup.sh
